# -*- coding: utf-8 -*-
"""Heart_Disease_Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EOn4MtPZn_U0DC9H67HoSKWBw_e5FRyG

# Description: This program classifies a person as having cardiovascular disease or not.
"""

from google.colab import drive

drive.mount('/content/gdrive')

"""#**Importing Required Libraries**"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""#**Data Collection & Processing**"""

data = pd.read_csv(r'/content/gdrive/My Drive/data/dataset.csv')

data.head()

data.tail()

data.shape

data.info()

data.describe()

"""# checking the distribution of Target Variable"""

data['target'].value_counts()

"""**1 --> Defective Heart**

**0 --> Healthy Heart**
#**Data Splitting(Features & Target)**
"""

X = data.drop(columns='target', axis=1)
Y = data['target']

print(X)

print(Y)

"""**Splitting the Data into Training data & Test Data**"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""#**Model Training**
**Logistic Regression**
"""

model = LogisticRegression()

model.fit(X_train, Y_train)

"""## **Evaluation**
**Accuracy Score**
"""

X_train_prediction= model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy on Training data : ', training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print('Accuracy on Test data : ', test_data_accuracy)

"""# **Predictive System**"""

input_data = (3	,61	,1	,0	,166	,203,	0	,1	,161,0,	2,	1,	3		)

input_data_as_numpy_array= np.asarray(input_data)


input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]== 0):
  print('The Person does not have a Heart Disease')
else:
  print('The Person has Heart Disease')